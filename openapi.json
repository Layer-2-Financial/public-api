{"openapi":"3.0.1","info":{"title":"Layer2 API Specification","description":"Welcome to the Layer2 Financial Developer Guide!\n\nLayer2 Financial is a Crypto Banking as a Service API that lets you rapidly launch crypto products in your platform through a Single Integration.\n# Quick Start Guide \nThe quick start guide will help you to understand the high-level concepts that are specific to Layer2 Financial If you have any questions along the way, please don't hesitate to reach out to us directly via email at support@layer2financial.com\n\n|Step|Action|Description|\n|-|-|-|\n|**1**|Customer Onboarding|The first step is to onboard a customer onto the platform. For **regulated** clients who are responsible for performing KYC/KYB on their customers,  you can use the [customers](#tag/Customers) service to quickly create customers.  For **unregulated** clients, Layer2 must perform the KYC/KYB on your behalf, use the [applications](#tag/Applications) service to create applications and onboard customers knowing all regulatory compliance is handled on your behalf.|\n|**2**|Account Opening|Now that you have a customer, you can open an account for them. Head to the [accounts](#tag/AccountsDeposits) service to create your first account.  |\n|**3**|Receive Funds|With the account open, you are ready to receive funds. For crypto based accounts, simply request an [address](#operation/getAddress_1) for the account, and then send in funds. No vaults, no wallets, no keys - simple.   |\n|**4**|Check your funds|Time to check your funds have arrived. Check the [transactions](#operation/getTransactions_1) on your account to watch the deposit arrive. Notice how the transaction will move from **PENDING** to **POSTED**.  We ensure you can see transactions as they arrive (PENDING), and become spendable (POSTED) once they pass all AML and screening processes. If there is a problem along the way, we move the funds to your treasury accounts and alert you to conduct manual screening prior allocating back to the relevant customer account. |\n|**5**|Exchange Funds|Before you can perform an exchange, you will need a second account for your customer with a different currency to deposit the exchanged funds into. Head back to step 2, and create a new account with a different asset type. After that, head over to the [exchanges](#tag/Exchanges) service where you can move funds between accounts. We handle the complexity of the trade for you, you need not care about currency pairs or bips. |\n|**6**|Withdraw Funds|Funds can be withdrawn to external wallets via the [withdrawals](#tag/Withdrawals) service. We ensure to capture all travel rule related information where needed, an execute the withdrawal to your requested counterparty with a process requiring quorum approval. |\n\n# Concepts \n## Accounts \nAccounts are at the heart of the Layer2 platform. They are backed by a complex set of segregated double-entry ledgers designed by our team of certified corporate auditors and accountants. We treat fiat and crypto accounts the same, providing you a single consistent way of accessing capabilities in the form of deposits, payments, exchanges, withdrawals and transfers. You don't have to worry about vaults, wallets, keys, counterparties, rails or routing numbers. We take care of that complexity so you can focus on building your business needs and objectives.  \n\nExplore our accounts APIs to look at how to create and interact with [accounts](#tag/AccountsDeposits), the remaining services (*payments*, [withdrawals](#tag/Withdrawals), [transfers](#tag/Transfers) and [exchanges](#tag/Exchanges)) allow you to perform actions on those accounts.  \n## External Entity Identifiers \nWe allow you to use your existing identifiers of key entities to refer to the same entities within our system. This reduces the integration burden for you, as you do not need to manage and track Layer2 identifiers against the same entities in your system \n\nFor example, when creating a customer in the Layer2 system, you will provide the Customer ID as part of creating the record. Any subsequent APIrequests to manage this customer will key off the ID you provided. You can reuse your own internal identifier or issue new ones depending on your needs and information security requirements. \n\nWe call these **External Identifiers**.  In general, this model was put into place to reduce your integration efforts and complexity, and have you up and running faster and more efficiently. Currently we define external identifiers for;\n\n- Customer Identifiers\n- Payor Identifiers\n- Account Identifiers\n\nWhere external identifiers are used, you do not need to be concerned about clashes with other Layer2 clients as we ensure uniqueness at the client level.\n## Request Signing \nCertain endpoints require secondary validation prior to the request being accepted for processing. We use Ed25519 based signatures to validate requests. These endpoints will specify the `x-signature` and `x-timestamp` headers as additional parameters.\n### Signing Keys\nYou will generate the signing key pair when onboarding. You are required to provide us the generated Ed25519 public key to complete onboarding.\n\nYou must use the associated Ed25519 signing key (private key) when creating signatures for requests. \n\nPlease note that signing keys (Ed25519 private keys) should be stored securely. The signing key should only be used to derive request signatures and should never be sent in a request. Layer2 will never request you share your private key.\n\nSignatures are optional unless explicitly required, but are encouraged for all requests. If a signature is provided, it will be verified.\n\n### Generating the Signing Key\nYou must securely generate an Ed25519 key pair on your own hardware and retain both the public and private portions. Layer2 requires the 64-character (32 bytes) hex-encoded Ed25519 during onboarding. \n\n#### Code Sample (Python)\n\n    # https://pypi.org/project/PyNaCl/\n    \n    import nacl\n    import nacl.signing\n    import secrets\n    \n    seed = secrets.token_bytes(32)\n    \n    # Generate a new random signing key\n    signing_key = nacl.signing.SigningKey(seed)\n    \n    # Obtain the hex-encoded signing key\n    print('Signing key:')\n    print(signing_key.encode().hex())\n    \n    # Obtain the hex-encoded verify key for the given signing key\n    # Use this when onboarding with Layer2\n    print('Public key:')\n    print(signing_key.verify_key.encode().hex())\n\n### Generating the Signing Key\nTo sign a request, generate a request signature using the Ed25519 private (signing) key you generated during onboarding, and provide it alongside the request in the `x-signature` header.Signing is a 3 step process (below),  details of each field using in signing is explained below.\n\n|Step|Action|Description|\n|-|-|-|\n|**1**|Concatenate| Concatenate the `timestamp`, `method`, `request path`, and `body` into a string. There are no spaces or other characters between these values. The order of the fields MUST follow the order stipulated here.|\n|**2**|Sign| Take the string from step 1 and generate a signature using your Ed25519 private key |\n|**3**|Encode| Take the signed value and hex-encode the output.|\n\nThe fields used to generate the signature are as follows. If the conditions below are not met, your signature will not validate.\n\n|Field|Description|\n|-|-|\n|**Timestamp**| The number of seconds since the Unix Epoch in UTC, and must be within one minute of the API service's time when the. The same value MUST be also placed in the `x-timestamp` header.|\n|**Method**| Uppercase HTTP verb (GET, PUT, POST, DELETE) |\n|**Request Path**| Lowercase path minus the domain, including ALL query parameters and values (ex. /api/v1/accounts/payments/1001-1234/address?type=abc).|\n|**Body**| Should be omitted where there is no body (e.g. GET). The `stringified` HTTP request body.  |\n\n### Signing Example\nYou can validate your signing code using the example below;\n\n|Field|Value|\n|-|-|\n|**Timestamp**| 1527380000 |\n|**Method**| POST |\n|**Request Path**| /api/v1/accounts/payments/1001-1234/address?type=abc |\n|**Body**| {\"amount\": \"100\",\"payment_reference\": \"FUND01-00023423\",\"payor_id\": \"0000-0003\"} |\n|**Signing Key**| 302e020100300506032b6570042204200df0ce421b0830759ea9bfa727c0f4d0aa7086cfaf26c66e7e85bd10787d5728 |\n|**Public Key**| 302a300506032b657003210095de28d850d6be3525384323b5add134dcb9b3bb404f43cbf47dac5e11c351de |\n|**Signature Key**| 51b19da0a23377bbb72222ba78bc32f0ec24404ac24b1a0c8f6942f2eb9e26bd6ffb078b9630a376f45360b74861f29198a81d93c2ae09971969b19532a9a800 |\n\n## Idempotence \nCertain endpoints support idempotent requests so that a given request can be safely retried without performing the same operation twice. For example, if a request to accept a transfer does not respond due to network issues, you can retry the request using the same idempotent ID to ensure that only one transfer is performed.\n\nEndpoints that support idempotent requests have an optional `x-l2f-idempotency-id` header field that can be populated with a unique string using your method of choice (such as a v4 UUID).\n\nIf a request is valid, Layer2 will save the request indefinitely. If a subsequent request is received with the same idempotentId we will return the previously saved response for that idempotentId.\n## Blockchain Fees (Gas) \nGas Management Details\n## Pagination\nWe follow a standard pagination model across all APIs that provide a list of responses. A `links` entity provides access to the current (self) page, first, last, next and previous.\n","version":"0.981"},"servers":[{"url":"https://dev.layer2financial.dev/api","description":"Development API Instance"},{"url":"https://platform.layer2financial.com/api","description":"Production API Instance"}],"tags":[{"name":"Applications","description":"## Overview\nUse applications to onboard your customers onto the Layer2 Platform and open their first account. This is akin to a prospect filling out an application form so that they can become a customer. The application process is fluid in terms of data capture, you can modify the details until you are setting to submit the details. \n\nThis process only applies to non-accredited clients for whom Layer2 will perform the full KYC/KYB function. **For accredited clients (e.g. a regulated entity), you can skip the application process and move directly to opening customers using the [customers](#tag/Customers) endpoint.**\n## Flow\n|Step|Action|Description|\n|-|-|-|\n|**1**|Create|[Create](#operation/createApplication_1) an application, provide the customer ID to designate to the customer record and the account you wish to open|\n|**2**|Add Individuals|*Applies only to corporate applications.* Add [individuals](#operation/addIndividualToApplication) to the application for any beneficial owners or corporate officers |\n|**3**|Upload Documents|[Upload](#operation/uploadDocument) the relevant documents needed for the application you have created. The documents you need are provided when [retrieving](#operation/getApplicationStatus) the application status. |\n|**4**|Update Details|Update any missing or incorrect details on the [application](#operation/updateApplication) (and for corporate applications and [individuals](#operation/updateIndividual_1)that were created) and ensure there are no validation errors remaining. Check the [application status](#operation/getApplicationStatus) for details.|\n|**5**|Submit Application|Once the application [status](#operation/getApplicationStatus) is ready to submit, [submit](#operation/submitApplication) the application for processing. The application will now enter KYC/KYB validation and approval|\n|**6**|Check Status|Poll the application [status](#operation/getApplicationStatus) endpoint to determine when the application has been closed and the customer and accounts created. |\n"},{"name":"Accounts/Deposits","description":"Deposit accounts creation and management functions"},{"name":"Accounts/Payments","description":"Payment accounts creation and management functions"},{"name":"Adjustments","description":"Perform ledger corrections"},{"name":"Customers","description":"Customer management and servicing functions to allow clients to onboard, manage and maintain customers"},{"name":"Transfers","description":"Transfer are used to move funds between two platform managed accounts that are denominated in the same currency. Where possible, these are always performed *offchain*. "},{"name":"Exchanges","description":"Exchanges are used to convert funds from one currency to another. This is achieved by moving money between 2 platform accounts that are denominated in different currencies. We have eliminated the complexity of traditional currency trading. \n\nYou can configure what exchanges are allowed via the [Management Interface](http://management.layer2financial.com). "},{"name":"Withdrawals","description":"Move funds from a platform managed account to an external counter party"},{"name":"Settlements","description":"Settlement services for funds confirmation and reconciliation"}],"paths":{"/v1/withdrawals":{"post":{"tags":["Withdrawals"],"summary":"Create Withdrawal","description":"Request a new withdrawal. On successful request, the withdrawal must be accepted before it is queued for execution. Withdrawals accepted before ","operationId":"createWithdrawal","parameters":[{"name":"Authorization","in":"header","description":"OAuth bearer token (see authentication flows)","schema":{"type":"string"}},{"name":"x-l2f-request-id","in":"header","description":"Optional Unique ID per request, useful for fault resolution/diagnosis and audit.","schema":{"type":"string"}},{"name":"x-l2f-idempotency-id","in":"header","description":"Unique ID used to safely retry an operation. See idempotency section for more details.","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Withdrawal"}}},"required":true},"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseWithdrawalBase"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"500":{"description":"Internal Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}}},"security":[{"OAuth2 Flow":["withdrawals:write"]}]}},"/v1/withdrawals/{id}/accept":{"post":{"tags":["Withdrawals"],"summary":"Accept Withdrawal","description":"Accept a withdrawal. This will execute the withdrawal and may not be reversible","operationId":"acceptWithdrawal","parameters":[{"name":"id","in":"path","description":"Withdrawal ID","required":true,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"OAuth bearer token (see authentication flows)","schema":{"type":"string"}},{"name":"x-l2f-request-id","in":"header","description":"Optional Unique ID per request, useful for fault resolution/diagnosis and audit.","schema":{"type":"string"}},{"name":"x-l2f-idempotency-id","in":"header","description":"Unique ID used to safely retry an operation. See idempotency section for more details.","schema":{"type":"string"}},{"name":"x-signature","in":"header","description":"Client signature to validate the provence of the API request. See signing section for more details.","schema":{"type":"string"}},{"name":"x-timestamp","in":"header","description":"Current timestamp, represented AS unix epoch seconds. Mandatory when x-signature is provided.","schema":{"type":"string"}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseWithdrawalBase"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"500":{"description":"Internal Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}}},"security":[{"OAuth2 Flow":["withdrawals:write"]}]}},"/v1/transfers":{"post":{"tags":["Transfers"],"summary":"Create Transfer","description":"Request a new transfer. The transfer must be accepted prior to executing","operationId":"createTransfer","parameters":[{"name":"Authorization","in":"header","description":"OAuth bearer token (see authentication flows)","schema":{"type":"string"}},{"name":"x-l2f-request-id","in":"header","description":"Optional Unique ID per request, useful for fault resolution/diagnosis and audit.","schema":{"type":"string"}},{"name":"x-l2f-idempotency-id","in":"header","description":"Unique ID used to safely retry an operation. See idempotency section for more details.","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RequestTransfer"}}},"required":true},"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseTransfer"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"500":{"description":"Internal Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}}},"security":[{"OAuth2 Flow":["transfers:write"]}]}},"/v1/transfers/{id}/accept":{"post":{"tags":["Transfers"],"summary":"Accept Transfer","description":"Accept a requested transfer. This will execute the transfer and may not be reversible depending on the owner of the destination account","operationId":"confirmTransfer","parameters":[{"name":"id","in":"path","description":"Transfer ID","required":true,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"OAuth bearer token (see authentication flows)","schema":{"type":"string"}},{"name":"x-l2f-request-id","in":"header","description":"Optional Unique ID per request, useful for fault resolution/diagnosis and audit.","schema":{"type":"string"}},{"name":"x-l2f-idempotency-id","in":"header","description":"Unique ID used to safely retry an operation. See idempotency section for more details.","schema":{"type":"string"}},{"name":"x-signature","in":"header","description":"Client signature to validate the provence of the API request. See signing section for more details.","schema":{"type":"string"}},{"name":"x-timestamp","in":"header","description":"Current timestamp, represented AS unix epoch seconds. Mandatory when x-signature is provided.","schema":{"type":"string"}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseTransferBase"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"500":{"description":"Internal Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}}},"security":[{"OAuth2 Flow":["transfers:write"]}]}},"/v1/exchanges/{id}/accept":{"post":{"tags":["Exchanges"],"summary":"Accept Exchange","description":"Accept an exchange quote. This will execute the exchange and is not reversible","operationId":"acceptExchange","parameters":[{"name":"id","in":"path","description":"Exchange ID","required":true,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"OAuth bearer token (see authentication flows)","schema":{"type":"string"}},{"name":"x-l2f-request-id","in":"header","description":"Optional Unique ID per request, useful for fault resolution/diagnosis and audit.","schema":{"type":"string"}},{"name":"x-l2f-idempotency-id","in":"header","description":"Unique ID used to safely retry an operation. See idempotency section for more details.","schema":{"type":"string"}},{"name":"x-signature","in":"header","description":"Client signature to validate the provence of the API request. See signing section for more details.","schema":{"type":"string"}},{"name":"x-timestamp","in":"header","description":"Current timestamp, represented AS unix epoch seconds. Mandatory when x-signature is provided.","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RequestExchangeAccept"}}},"required":true},"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseExchange"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"500":{"description":"Internal Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}}},"security":[{"OAuth2 Flow":["exchanges:write"]}]}},"/v1/exchanges/quote":{"post":{"tags":["Exchanges"],"summary":"Create Exchange","description":"Requesting an exchange is non binding, you can request as many exchanges as needed. Typically within your user experience tier, you are expected to poll this endpoint periodically when showing users quotes (e.g. every 3 seconds). When you are ready to accept a quote, see the [accept exchange](#operation/acceptExchange) endpoint. ","operationId":"createExchange","parameters":[{"name":"Authorization","in":"header","description":"OAuth bearer token (see authentication flows)","schema":{"type":"string"}},{"name":"x-l2f-request-id","in":"header","description":"Optional Unique ID per request, useful for fault resolution/diagnosis and audit.","schema":{"type":"string"}},{"name":"x-l2f-idempotency-id","in":"header","description":"Unique ID used to safely retry an operation. See idempotency section for more details.","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RequestExchange"}}},"required":true},"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseExchange"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"500":{"description":"Internal Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}}},"security":[{"OAuth2 Flow":["exchanges:write"]}]}},"/v1/documents/{entity}/{id}/{document_type}/{document_face}":{"post":{"tags":["Applications"],"summary":"Upload Document","description":"Uploads a document for the specific application. Subsequent uploads will overwrite previous documents","operationId":"uploadDocument","parameters":[{"name":"entity","in":"path","description":"Entity type that this upload relates to","required":true,"schema":{"type":"string","enum":["CORPORATION","INDIVIDUAL"]}},{"name":"id","in":"path","description":"Entity ID","required":true,"schema":{"type":"string"}},{"name":"document_type","in":"path","description":"Type of document being uploaded","required":true,"schema":{"type":"string","enum":["DRIVERS_LICENCE","STATE_ID","PASSPORT","GOVERNMENT_ID","UTILITY_BILL","BANK_STATEMENT","LEASE_AGREEMENT","SOCIAL_SECURITY_CARD","POWER_OF_ATTORNEY","ARTICLES_OF_INCORPORATION","CERTIFICATE_OF_INCORPORATION"]}},{"name":"document_face","in":"path","description":"Is this the front or back of the document. Default to front","required":true,"schema":{"type":"string","enum":["FRONT","BACK"]}},{"name":"Authorization","in":"header","description":"OAuth bearer token (see authentication flows)","schema":{"type":"string"}},{"name":"x-l2f-request-id","in":"header","description":"Optional Unique ID per request, useful for fault resolution/diagnosis and audit.","schema":{"type":"string"}},{"name":"x-l2f-idempotency-id","in":"header","description":"Unique ID used to safely retry an operation. See idempotency section for more details.","schema":{"type":"string"}}],"requestBody":{"content":{"multipart/form-data":{"schema":{"required":["file"],"type":"object","properties":{"file":{"type":"string","format":"binary"}}}}}},"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseDocumentBase"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"500":{"description":"Internal Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}}},"security":[{"OAuth2 Flow":["applications:write"]}]}},"/v1/customers":{"post":{"tags":["Customers"],"summary":"Create Customer","description":"Create a new customer (individual or corporation). This operation will not perform KYC/KYB on your behalf, and is only available to regulated clients. For non regulated clients you must onboard via the application process","operationId":"createCustomer","parameters":[{"name":"Authorization","in":"header","description":"OAuth bearer token (see authentication flows)","schema":{"type":"string"}},{"name":"x-l2f-request-id","in":"header","description":"Optional Unique ID per request, useful for fault resolution/diagnosis and audit.","schema":{"type":"string"}},{"name":"x-l2f-idempotency-id","in":"header","description":"Unique ID used to safely retry an operation. See idempotency section for more details.","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RequestCustomer"}}},"required":true},"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseCustomerBase"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"500":{"description":"Internal Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}}},"security":[{"OAuth2 Flow":["customers:write"]}]}},"/v1/customers/{id}/payor":{"post":{"tags":["Customers"],"summary":"Create Payor","description":"Onboard a payor and assign them to a customer. All details are optional barring the ID and First/Last name","operationId":"onboardPayor","parameters":[{"name":"id","in":"path","description":"Customer ID","required":true,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"OAuth bearer token (see authentication flows)","schema":{"type":"string"}},{"name":"x-l2f-request-id","in":"header","description":"Optional Unique ID per request, useful for fault resolution/diagnosis and audit.","schema":{"type":"string"}},{"name":"x-l2f-idempotency-id","in":"header","description":"Unique ID used to safely retry an operation. See idempotency section for more details.","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RequestPayorOnboarding"}}},"required":true},"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponsePayorBase"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"500":{"description":"Internal Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}}},"security":[{"OAuth2 Flow":["customers:write"]}]}},"/v1/customers/{id}/individuals":{"post":{"tags":["Customers"],"summary":"Create Individual","description":"Add a new individual/officer on a corporate customer","operationId":"addIndividual","parameters":[{"name":"id","in":"path","description":"Customer ID","required":true,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"OAuth bearer token (see authentication flows)","schema":{"type":"string"}},{"name":"x-l2f-request-id","in":"header","description":"Optional Unique ID per request, useful for fault resolution/diagnosis and audit.","schema":{"type":"string"}},{"name":"x-l2f-idempotency-id","in":"header","description":"Unique ID used to safely retry an operation. See idempotency section for more details.","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RequestIndividual"}}},"required":true},"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseIndividualBase"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"500":{"description":"Internal Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}}},"security":[{"OAuth2 Flow":["customers:write"]}]}},"/v1/applications":{"post":{"tags":["Applications"],"summary":"Create Application","description":"Start a new application to onboard a person or corporation. Once the application is created, proceed to add individuals and update as needed, and then submit once the status allows for it. ","operationId":"createApplication","parameters":[{"name":"Authorization","in":"header","description":"OAuth bearer token (see authentication flows)","schema":{"type":"string"}},{"name":"x-l2f-request-id","in":"header","description":"Optional Unique ID per request, useful for fault resolution/diagnosis and audit.","schema":{"type":"string"}},{"name":"x-l2f-idempotency-id","in":"header","description":"Unique ID used to safely retry an operation. See idempotency section for more details.","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RequestApplication"}}},"required":true},"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseApplicationBase"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"500":{"description":"Internal Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}}},"security":[{"OAuth2 Flow":["applications:write"]}]}},"/v1/applications/{id}/submit":{"post":{"tags":["Applications"],"summary":"Submit Application","description":"Submit the application for processing, can only be performed once the application status is  \"READY_FOR_SUBMISSION\".","operationId":"submitApplication","parameters":[{"name":"id","in":"path","description":"Application ID","required":true,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"OAuth bearer token (see authentication flows)","schema":{"type":"string"}},{"name":"x-l2f-request-id","in":"header","description":"Optional Unique ID per request, useful for fault resolution/diagnosis and audit.","schema":{"type":"string"}},{"name":"x-l2f-idempotency-id","in":"header","description":"Unique ID used to safely retry an operation. See idempotency section for more details.","schema":{"type":"string"}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseApplicationBase"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"500":{"description":"Internal Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}}},"security":[{"OAuth2 Flow":["applications:write"]}]}},"/v1/applications/{id}/individual":{"post":{"tags":["Applications"],"summary":"Add Individual","description":"Adds an individual to the corporate application. Not applicable for individual applications","operationId":"addIndividualToApplication","parameters":[{"name":"id","in":"path","description":"Application ID","required":true,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"OAuth bearer token (see authentication flows)","schema":{"type":"string"}},{"name":"x-l2f-request-id","in":"header","description":"Optional Unique ID per request, useful for fault resolution/diagnosis and audit.","schema":{"type":"string"}},{"name":"x-l2f-idempotency-id","in":"header","description":"Unique ID used to safely retry an operation. See idempotency section for more details.","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RequestIndividual"}}},"required":true},"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseIndividualBase"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"500":{"description":"Internal Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}}},"security":[{"OAuth2 Flow":["applications:write"]}]}},"/v1/adjustments":{"post":{"tags":["Adjustments"],"summary":"Create Adjustment","operationId":"createAdjustment","parameters":[{"name":"Authorization","in":"header","description":"OAuth bearer token (see authentication flows)","schema":{"type":"string"}},{"name":"x-l2f-request-id","in":"header","description":"Optional Unique ID per request, useful for fault resolution/diagnosis and audit.","schema":{"type":"string"}},{"name":"x-l2f-idempotency-id","in":"header","description":"Unique ID used to safely retry an operation. See idempotency section for more details.","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RequestAdjustment"}}},"required":true},"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/CREDIT"},{"$ref":"#/components/schemas/DEBIT"}]}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"500":{"description":"Internal Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}}},"security":[{"OAuth2 Flow":["adjustments:write"]}]}},"/v1/adjustments/{id}/accept":{"post":{"tags":["Adjustments"],"summary":"Accept Adjustment","description":"Accept an adjustment. This change cannot be reversed without performing a corrective adjustment","operationId":"acceptAdjustment","parameters":[{"name":"id","in":"path","description":"Adjustment ID","required":true,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"OAuth bearer token (see authentication flows)","schema":{"type":"string"}},{"name":"x-l2f-request-id","in":"header","description":"Optional Unique ID per request, useful for fault resolution/diagnosis and audit.","schema":{"type":"string"}},{"name":"x-l2f-idempotency-id","in":"header","description":"Unique ID used to safely retry an operation. See idempotency section for more details.","schema":{"type":"string"}},{"name":"x-signature","in":"header","description":"Client signature to validate the provence of the API request. See signing section for more details.","schema":{"type":"string"}},{"name":"x-timestamp","in":"header","description":"Current timestamp, represented AS unix epoch seconds. Mandatory when x-signature is provided.","schema":{"type":"string"}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/CREDIT"},{"$ref":"#/components/schemas/DEBIT"}]}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"500":{"description":"Internal Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}}},"security":[{"OAuth2 Flow":["adjustments:write"]}]}},"/v1/accounts/payments":{"get":{"tags":["Accounts/Payments"],"summary":"Retrieve Accounts","description":"Retrieves a list of accounts given the filter parameters provided","operationId":"getPaymentAccounts","parameters":[{"name":"page","in":"query","description":"Page of records to get (default 0 = first page)","schema":{"type":"integer","format":"int32"}},{"name":"page_size","in":"query","description":"Records to return per page (default = 20)","schema":{"type":"integer","format":"int32"}},{"name":"customer_id","in":"query","description":"Account holder customer ID","schema":{"type":"string"}},{"name":"product_type","in":"query","description":"Top level product type [see account concepts](#section/Concepts/Accounts) for more details.","schema":{"type":"string","enum":["CLIENT","DEPOSIT","VIRTUAL"]}},{"name":"Authorization","in":"header","description":"OAuth bearer token (see authentication flows)","schema":{"type":"string"}},{"name":"x-l2f-request-id","in":"header","description":"Optional Unique ID per request, useful for fault resolution/diagnosis and audit.","schema":{"type":"string"}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseAccounts"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"500":{"description":"Internal Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}}},"security":[{"OAuth2 Flow":["accounts:read"]}]},"post":{"tags":["Accounts/Payments"],"summary":"Open Payment Account","description":"Opens a new payment account for a customer. ","operationId":"openPaymentAccount","parameters":[{"name":"Authorization","in":"header","description":"OAuth bearer token (see authentication flows)","schema":{"type":"string"}},{"name":"x-l2f-request-id","in":"header","description":"Optional Unique ID per request, useful for fault resolution/diagnosis and audit.","schema":{"type":"string"}},{"name":"x-l2f-idempotency-id","in":"header","description":"Unique ID used to safely retry an operation. See idempotency section for more details.","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RequestAccountOpen"}}},"required":true},"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseAccountBase"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"500":{"description":"Internal Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}}},"security":[{"OAuth2 Flow":["accounts:write"]}]}},"/v1/accounts/payments/{id}/address":{"post":{"tags":["Accounts/Payments"],"summary":"Request Payment Address","description":"Returns an address that can be used to send deposits to this account. If payor details are provided in the request, the address is also associated to the payor and payment reference ID. \n\nThe [transactions](#operation/getTransactions) listing provides reconciliation details per deposit, including payor information if provided. When auto exchange is enabled, the [settlements](#operation/getSettlement) listing provides a fully breakdown of deposit to exchange and settlement. \n\nThe product configuration of the account will determine if the address being returned is fixed or temporary (rotating). This can be modified via the [Management Interface](http://management.layer2financial.com). You can read more about the address leasing model under [Leasing Concepts]().  \n> If no payor details are provided whn requesting an address, the behaviour defaults to that of a [deposit account](#operation/getAddress_1). \n","operationId":"getPaymentAddress","parameters":[{"name":"id","in":"path","description":"Payment Account ID","required":true,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"OAuth bearer token (see authentication flows)","schema":{"type":"string"}},{"name":"x-l2f-request-id","in":"header","description":"Optional Unique ID per request, useful for fault resolution/diagnosis and audit.","schema":{"type":"string"}},{"name":"x-l2f-idempotency-id","in":"header","description":"Unique ID used to safely retry an operation. See idempotency section for more details.","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RequestPaymentAddress"}}},"required":true},"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseAddressLease"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"500":{"description":"Internal Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}}},"security":[{"OAuth2 Flow":["accounts:write"]}]}},"/v1/accounts/deposits":{"get":{"tags":["Accounts/Deposits"],"summary":"Retrieve Accounts","description":"Retrieves a list of accounts given the filter parameters provided","operationId":"getAccounts","parameters":[{"name":"page","in":"query","description":"Page of records to get (default 0 = first page)","schema":{"type":"integer","format":"int32"}},{"name":"page_size","in":"query","description":"Records to return per page (default = 20)","schema":{"type":"integer","format":"int32"}},{"name":"customer_id","in":"query","description":"Account holder customer ID","schema":{"type":"string"}},{"name":"product_type","in":"query","description":"Top level product type [see account concepts](#section/Concepts/Accounts) for more details.","schema":{"type":"string","enum":["CLIENT","DEPOSIT","VIRTUAL"]}},{"name":"Authorization","in":"header","description":"OAuth bearer token (see authentication flows)","schema":{"type":"string"}},{"name":"x-l2f-request-id","in":"header","description":"Optional Unique ID per request, useful for fault resolution/diagnosis and audit.","schema":{"type":"string"}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseAccounts"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"500":{"description":"Internal Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}}},"security":[{"OAuth2 Flow":["accounts:read"]}]},"post":{"tags":["Accounts/Deposits"],"summary":"Open Account","description":"Opens a new account for a customer of a given product type","operationId":"openAccount","parameters":[{"name":"Authorization","in":"header","description":"OAuth bearer token (see authentication flows)","schema":{"type":"string"}},{"name":"x-l2f-request-id","in":"header","description":"Optional Unique ID per request, useful for fault resolution/diagnosis and audit.","schema":{"type":"string"}},{"name":"x-l2f-idempotency-id","in":"header","description":"Unique ID used to safely retry an operation. See idempotency section for more details.","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RequestAccountOpen"}}},"required":true},"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseAccountBase"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"500":{"description":"Internal Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}}},"security":[{"OAuth2 Flow":["accounts:write"]}]}},"/v1/accounts/deposits/{id}/address":{"post":{"tags":["Accounts/Deposits"],"summary":"Request Address","description":"Generates and retrieves a usable deposit address for the Asset Type that is assigned to this account","operationId":"getAddress","parameters":[{"name":"id","in":"path","description":"Account ID","required":true,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"OAuth bearer token (see authentication flows)","schema":{"type":"string"}},{"name":"x-l2f-request-id","in":"header","description":"Optional Unique ID per request, useful for fault resolution/diagnosis and audit.","schema":{"type":"string"}},{"name":"x-l2f-idempotency-id","in":"header","description":"Unique ID used to safely retry an operation. See idempotency section for more details.","schema":{"type":"string"}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseAddressLease"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"500":{"description":"Internal Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}}},"security":[{"OAuth2 Flow":["accounts:write"]}]}},"/v1/customers/{id}":{"get":{"tags":["Customers"],"summary":"Retrieve Customer","description":"Retrieve customer details","operationId":"getCustomerDetails","parameters":[{"name":"id","in":"path","description":"Customer ID","required":true,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"OAuth bearer token (see authentication flows)","schema":{"type":"string"}},{"name":"x-l2f-request-id","in":"header","description":"Optional Unique ID per request, useful for fault resolution/diagnosis and audit.","schema":{"type":"string"}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/CUSTOMER_INDIVIDUAL"},{"$ref":"#/components/schemas/CUSTOMER_CORPORATION"}]}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"500":{"description":"Internal Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}}},"security":[{"OAuth2 Flow":["customers:read"]}]},"patch":{"tags":["Customers"],"summary":"Update Customer ","description":"Update customer details. For individuals (officers) linked to a corporate customer, modify the individual resource directly using [Update Individual](#operation/updateIndividual).","operationId":"updateCustomer","parameters":[{"name":"id","in":"path","description":"Customer ID","required":true,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"OAuth bearer token (see authentication flows)","schema":{"type":"string"}},{"name":"x-l2f-request-id","in":"header","description":"Optional Unique ID per request, useful for fault resolution/diagnosis and audit.","schema":{"type":"string"}},{"name":"x-l2f-idempotency-id","in":"header","description":"Unique ID used to safely retry an operation. See idempotency section for more details.","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RequestCustomerPatch"}}},"required":true},"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseCustomerBase"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"500":{"description":"Internal Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}}},"security":[{"OAuth2 Flow":["customers:write"]}]}},"/v1/customers/{id}/individuals/{individual_id}":{"get":{"tags":["Customers"],"summary":"Retrieve Individual","description":"Retrieve individual details. This operation is only for corporate customers that have individual officers with access to the account","operationId":"getIndividual","parameters":[{"name":"id","in":"path","description":"Customer ID","required":true,"schema":{"type":"string"}},{"name":"individual_id","in":"path","description":"Individual ID","required":true,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"OAuth bearer token (see authentication flows)","schema":{"type":"string"}},{"name":"x-l2f-request-id","in":"header","description":"Optional Unique ID per request, useful for fault resolution/diagnosis and audit.","schema":{"type":"string"}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseIndividual"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"500":{"description":"Internal Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}}},"security":[{"OAuth2 Flow":["customers:read"]}]},"patch":{"tags":["Customers"],"summary":"Update Individual","description":"Update individual details. This operation is only for corporate customers that have individual officers with access to the account","operationId":"updateIndividual","parameters":[{"name":"id","in":"path","description":"Customer ID","required":true,"schema":{"type":"string"}},{"name":"individual_id","in":"path","description":"Individual ID","required":true,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"OAuth bearer token (see authentication flows)","schema":{"type":"string"}},{"name":"x-l2f-request-id","in":"header","description":"Optional Unique ID per request, useful for fault resolution/diagnosis and audit.","schema":{"type":"string"}},{"name":"x-l2f-idempotency-id","in":"header","description":"Unique ID used to safely retry an operation. See idempotency section for more details.","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RequestCustomerPatch"}}},"required":true},"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseIndividualBase"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"500":{"description":"Internal Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}}},"security":[{"OAuth2 Flow":["customers:write"]}]}},"/v1/applications/{id}":{"get":{"tags":["Applications"],"summary":"Retrieve Application","description":"Retrieve full details of the  application","operationId":"getApplication","parameters":[{"name":"id","in":"path","description":"Application ID","required":true,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"OAuth bearer token (see authentication flows)","schema":{"type":"string"}},{"name":"x-l2f-request-id","in":"header","description":"Optional Unique ID per request, useful for fault resolution/diagnosis and audit.","schema":{"type":"string"}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/INDIVIDUAL"},{"$ref":"#/components/schemas/CORPORATION"}]}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"500":{"description":"Internal Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}}},"security":[{"OAuth2 Flow":["applications:read"]}]},"patch":{"tags":["Applications"],"summary":"Update Application ","description":"Update applicant properties. For Individuals attached to a corporation, you much patch the individuals directly using [Update Individual](#operation/updateIndividual_1).","operationId":"updateApplication","parameters":[{"name":"id","in":"path","description":"Application ID","required":true,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"OAuth bearer token (see authentication flows)","schema":{"type":"string"}},{"name":"x-l2f-request-id","in":"header","description":"Optional Unique ID per request, useful for fault resolution/diagnosis and audit.","schema":{"type":"string"}},{"name":"x-l2f-idempotency-id","in":"header","description":"Unique ID used to safely retry an operation. See idempotency section for more details.","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RequestApplicationPatch"}}},"required":true},"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseApplicationBase"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"500":{"description":"Internal Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}}},"security":[{"OAuth2 Flow":["applications:write"]}]}},"/v1/applications/{id}/individual/{individual_id}":{"delete":{"tags":["Applications"],"summary":"Delete Individual","description":"Deletes an individual from a corporate application. This action is permanent and cannot be reversed. All related details of the individual (including uploaded documents) will also be deleted.","operationId":"deleteIndividual","parameters":[{"name":"id","in":"path","description":"Application ID","required":true,"schema":{"type":"string"}},{"name":"individual_id","in":"path","description":"Individual ID","required":true,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"OAuth bearer token (see authentication flows)","schema":{"type":"string"}},{"name":"x-l2f-request-id","in":"header","description":"Optional Unique ID per request, useful for fault resolution/diagnosis and audit.","schema":{"type":"string"}},{"name":"x-l2f-idempotency-id","in":"header","description":"Unique ID used to safely retry an operation. See idempotency section for more details.","schema":{"type":"string"}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseIndividualBase"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"500":{"description":"Internal Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}}},"security":[{"OAuth2 Flow":["applications:write"]}]},"patch":{"tags":["Applications"],"summary":"Update Individual","description":"Update individual properties. This applies only for corporate applications, where an officer needs to be updated.","operationId":"updateIndividual_1","parameters":[{"name":"id","in":"path","description":"Application ID","required":true,"schema":{"type":"string"}},{"name":"individual_id","in":"path","description":"Individual ID","required":true,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"OAuth bearer token (see authentication flows)","schema":{"type":"string"}},{"name":"x-l2f-request-id","in":"header","description":"Optional Unique ID per request, useful for fault resolution/diagnosis and audit.","schema":{"type":"string"}},{"name":"x-l2f-idempotency-id","in":"header","description":"Unique ID used to safely retry an operation. See idempotency section for more details.","schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RequestIndividualPatch"}}},"required":true},"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseIndividualBase"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"500":{"description":"Internal Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}}},"security":[{"OAuth2 Flow":["applications:write"]}]}},"/v1/withdrawals/{id}":{"get":{"tags":["Withdrawals"],"summary":"Retrieve Withdrawal","description":"Retrieves details of a previously requested withdrawal","operationId":"getWithdrawal","parameters":[{"name":"id","in":"path","description":"Withdrawal ID","required":true,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"OAuth bearer token (see authentication flows)","schema":{"type":"string"}},{"name":"x-l2f-request-id","in":"header","description":"Optional Unique ID per request, useful for fault resolution/diagnosis and audit.","schema":{"type":"string"}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseWithdrawal"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"500":{"description":"Internal Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}}},"security":[{"OAuth2 Flow":["transfers:read"]}]}},"/v1/transfers/{id}":{"get":{"tags":["Transfers"],"summary":"Retrieve Transfer","description":"Retrieves details of a previously requested transfer","operationId":"getTransfer","parameters":[{"name":"id","in":"path","description":"Transfer ID","required":true,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"OAuth bearer token (see authentication flows)","schema":{"type":"string"}},{"name":"x-l2f-request-id","in":"header","description":"Optional Unique ID per request, useful for fault resolution/diagnosis and audit.","schema":{"type":"string"}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseTransfer"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"500":{"description":"Internal Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}}},"security":[{"OAuth2 Flow":["transfers:read"]}]}},"/v1/settlements/{id}":{"get":{"tags":["Settlements"],"summary":"Retrieve Settlement","description":"Returns a detailed breakdown of an outbound settlement by account and customer. Filterable by source and destination accounts.","operationId":"getSettlement","parameters":[{"name":"id","in":"path","description":"Settlement ID","required":true,"schema":{"type":"string"}},{"name":"source_account_id","in":"query","description":"Source Account ID to filter settlement on","required":false,"schema":{"type":"string"}},{"name":"destination_account_id","in":"query","description":"Destination Account ID to filter settlement on","required":false,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"OAuth bearer token (see authentication flows)","schema":{"type":"string"}},{"name":"x-l2f-request-id","in":"header","description":"Optional Unique ID per request, useful for fault resolution/diagnosis and audit.","schema":{"type":"string"}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseSettlement"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"500":{"description":"Internal Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}}},"security":[{"OAuth2 Flow":["settlements:read"]}]}},"/v1/exchanges/{id}":{"get":{"tags":["Exchanges"],"summary":"Retrieve Exchange","description":"Retrieves details of a previously requested exchange","operationId":"getExchange","parameters":[{"name":"id","in":"path","description":"Exchange ID","required":true,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"OAuth bearer token (see authentication flows)","schema":{"type":"string"}},{"name":"x-l2f-request-id","in":"header","description":"Optional Unique ID per request, useful for fault resolution/diagnosis and audit.","schema":{"type":"string"}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseExchange"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"500":{"description":"Internal Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}}},"security":[{"OAuth2 Flow":["exchanges:read"]}]}},"/v1/applications/{id}/status":{"get":{"tags":["Applications"],"summary":"Retrieve Application Status","description":"Retrieve the detailed status of an application ","operationId":"getApplicationStatus","parameters":[{"name":"id","in":"path","description":"Application ID","required":true,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"OAuth bearer token (see authentication flows)","schema":{"type":"string"}},{"name":"x-l2f-request-id","in":"header","description":"Optional Unique ID per request, useful for fault resolution/diagnosis and audit.","schema":{"type":"string"}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseApplicationState"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"500":{"description":"Internal Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}}},"security":[{"OAuth2 Flow":["applications:read"]}]}},"/v1/adjustments/{id}":{"get":{"tags":["Adjustments"],"summary":"Retrieve adjustment","description":"Retrieves details of a previously requested adjustment","operationId":"getAdjustment","parameters":[{"name":"id","in":"path","description":"Adjustment ID","required":true,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"OAuth bearer token (see authentication flows)","schema":{"type":"string"}},{"name":"x-l2f-request-id","in":"header","description":"Optional Unique ID per request, useful for fault resolution/diagnosis and audit.","schema":{"type":"string"}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/CREDIT"},{"$ref":"#/components/schemas/DEBIT"}]}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"500":{"description":"Internal Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}}},"security":[{"OAuth2 Flow":["adjustments:read"]}]}},"/v1/accounts/payments/{id}":{"get":{"tags":["Accounts/Payments"],"summary":"Retrieve Payment Account","description":"Retrieves the base set of account details for a given account ID","operationId":"getPaymentAccount","parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"OAuth bearer token (see authentication flows)","schema":{"type":"string"}},{"name":"x-l2f-request-id","in":"header","description":"Optional Unique ID per request, useful for fault resolution/diagnosis and audit.","schema":{"type":"string"}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseAccount"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"500":{"description":"Internal Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}}},"security":[{"OAuth2 Flow":["accounts:read"]}]}},"/v1/accounts/payments/{id}/transactions":{"get":{"tags":["Accounts/Payments"],"summary":"Retrieve Transactions","description":"Retrieves all transactions under the given account","operationId":"getPaymentAccountTransactions","parameters":[{"name":"id","in":"path","description":"Payment Account ID","required":true,"schema":{"type":"string"}},{"name":"page","in":"query","description":"Page of records to get (default 0 = first page)","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"page_size","in":"query","description":"Records to return per page (default = 20)","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"order","in":"query","description":"Sort order by transaction date (ASC or DESC)","required":false,"schema":{"type":"string","enum":["ASC","DESC"]}},{"name":"start_date","in":"query","description":"Filter for transaction from this date","required":false,"schema":{"type":"string","format":"date"}},{"name":"end_date","in":"query","description":"Filter for transaction to this date","required":false,"schema":{"type":"string","format":"date"}},{"name":"Authorization","in":"header","description":"OAuth bearer token (see authentication flows)","schema":{"type":"string"}},{"name":"x-l2f-request-id","in":"header","description":"Optional Unique ID per request, useful for fault resolution/diagnosis and audit.","schema":{"type":"string"}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseTransactionPayments"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"500":{"description":"Internal Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}}},"security":[{"OAuth2 Flow":["accounts:read"]}]}},"/v1/accounts/payments/{id}/transactions/{id}":{"get":{"tags":["Accounts/Payments"],"summary":"Retrieve Transaction","description":"Retrieves details of a single transaction under the given account","operationId":"getPaymentAccountTransaction","parameters":[{"name":"id","in":"path","description":"Transaction ID","required":true,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"OAuth bearer token (see authentication flows)","schema":{"type":"string"}},{"name":"x-l2f-request-id","in":"header","description":"Optional Unique ID per request, useful for fault resolution/diagnosis and audit.","schema":{"type":"string"}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseTransactionDetails"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"500":{"description":"Internal Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}}},"security":[{"OAuth2 Flow":["accounts:read"]}]}},"/v1/accounts/deposits/{id}":{"get":{"tags":["Accounts/Deposits"],"summary":"Retrieve Account","description":"Retrieves the base set of account details for a given account ID","operationId":"getAccount","parameters":[{"name":"id","in":"path","description":"Account ID","required":true,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"OAuth bearer token (see authentication flows)","schema":{"type":"string"}},{"name":"x-l2f-request-id","in":"header","description":"Optional Unique ID per request, useful for fault resolution/diagnosis and audit.","schema":{"type":"string"}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseAccount"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"500":{"description":"Internal Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}}},"security":[{"OAuth2 Flow":["accounts:read"]}]}},"/v1/accounts/deposits/{id}/transactions":{"get":{"tags":["Accounts/Deposits"],"summary":"Retrieve Transactions","description":"Retrieves all transactions under the given account","operationId":"getTransactions","parameters":[{"name":"id","in":"path","description":"Account ID","required":true,"schema":{"type":"string"}},{"name":"page","in":"query","description":"Page of records to get (default 0 = first page)","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"page_size","in":"query","description":"Records to return per page (default = 20)","required":false,"schema":{"type":"integer","format":"int32"}},{"name":"order","in":"query","description":"Sort order by transaction date (ASC or DESC)","required":false,"schema":{"type":"string","enum":["ASC","DESC"]}},{"name":"start_date","in":"query","description":"Filter for transaction from this date","required":false,"schema":{"type":"string","format":"date"}},{"name":"end_date","in":"query","description":"Filter for transaction to this date","required":false,"schema":{"type":"string","format":"date"}},{"name":"Authorization","in":"header","description":"OAuth bearer token (see authentication flows)","schema":{"type":"string"}},{"name":"x-l2f-request-id","in":"header","description":"Optional Unique ID per request, useful for fault resolution/diagnosis and audit.","schema":{"type":"string"}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseTransactions"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"500":{"description":"Internal Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}}},"security":[{"OAuth2 Flow":["accounts:read"]}]}},"/v1/accounts/deposits/{id}/transactions/{id}":{"get":{"tags":["Accounts/Deposits"],"summary":"Retrieve Transaction","description":"Retrieves details of a single transaction under the given account","operationId":"getTransaction","parameters":[{"name":"id","in":"path","description":"Transaction ID","required":true,"schema":{"type":"string"}},{"name":"Authorization","in":"header","description":"OAuth bearer token (see authentication flows)","schema":{"type":"string"}},{"name":"x-l2f-request-id","in":"header","description":"Optional Unique ID per request, useful for fault resolution/diagnosis and audit.","schema":{"type":"string"}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseTransactionDetails"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}},"500":{"description":"Internal Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResponseError"}}}}},"security":[{"OAuth2 Flow":["accounts:read"]}]}}},"components":{"schemas":{"ResponseWithdrawalBase":{"required":["data"],"type":"object","properties":{"data":{"$ref":"#/components/schemas/WithdrawalBase"}}},"WithdrawalBase":{"type":"object","properties":{"id":{"type":"string","description":"Unique Identifier for the withdrawal request","readOnly":true},"status":{"type":"string","description":"Status of the withdrawal. Cannot be modified directly by the client","readOnly":true,"enum":["REQUESTED","REJECTED","EXPIRED","ACCEPTED","EXECUTED","CANCELLED"]}}},"Error":{"type":"object","properties":{"code":{"type":"string","description":"Layer2 Standard Error Code"},"description":{"type":"string","description":"Error Description"}},"description":"Error List"},"ResponseError":{"type":"object","properties":{"errors":{"type":"array","description":"Error List","items":{"$ref":"#/components/schemas/Error"}}}},"Address":{"type":"object","properties":{"unit_number":{"type":"string","description":"Unit Number"},"address_line1":{"type":"string","description":"Address Line 1"},"address_line2":{"type":"string","description":"Address Line 2"},"address_line3":{"type":"string","description":"Address Line 3"},"city":{"type":"string","description":"City"},"state":{"type":"string","description":"State / Province / Riding"},"postal_code":{"type":"string","description":"Postal / Zip Code"},"country_code":{"type":"string","description":"Country Code (2 Digit ISO31661-Alpha2 Format - https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)"}},"description":"Mailing Address"},"CounterPartyACH":{"type":"object","properties":{"id":{"type":"string","description":"Unique Identifier for the counter party","readOnly":true},"account_holder_name":{"type":"string","description":"Name on destination account (individual or business name)"},"account_description":{"type":"string","description":"(Optional) Description of destination account (can be helpful to speed up processing"},"account_number":{"type":"string","description":"Destination account number"},"routing_number":{"type":"string","description":"Destination routing number"}},"description":"Destination counterparty where funds will be sent"},"CounterPartyNorthAmericanCrypto":{"type":"object","properties":{"id":{"type":"string","description":"Unique Identifier for the counter party","readOnly":true},"recipient_address":{"type":"string","description":"Blockchain address of the recipient where funds will be sent. IMPORTANT: Ensure that this address is valid for the asset type of the source account (blockchain, network, currency). Incorrect addresses will result in unrecoverable loss of funds"},"recipient_wallet_type":{"type":"string","description":"Type of wallet that will hold/custody these funds for the beneficial owner (e.g. Custodian, Private Wallet etc)","enum":["INSTITUTION","OTHER","UNKNOWN"]},"recipient_wallet_name":{"type":"string","description":"Name of the wallet owner (e.g. Anchorage Digital, Coinbase, or entity name etc)"},"recipient_wallet_country_code":{"type":"string","description":"Country where the wallet owner resides (2 Digit ISO31661-Alpha2 Format - https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)"},"beneficial_owner_type":{"type":"string","description":"The type of beneficial owner who is receiving these funds (e.g. an Institution, yourself, etc)","enum":["INSTITUTION","SOURCE_ACCOUNT_HOLDER","OTHER"]},"beneficial_owner_name":{"type":"string","description":"The name of beneficial owner who is receiving these funds (e.g. Anchorage Digital, Coinbase, or entity name etc)"},"beneficial_owner_country_code":{"type":"string","description":"Country where the beneficial owner resides (2 Digit ISO31661-Alpha2 Format - https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)"}},"description":"Destination counterparty where funds will be sent"},"CounterPartyWire":{"type":"object","properties":{"id":{"type":"string","description":"Unique Identifier for the counter party","readOnly":true},"account_holder_name":{"type":"string","description":"Name on destination account (individual or business name)"},"account_description":{"type":"string","description":"(Optional) Description of destination account (can be helpful to speed up processing"},"account_number":{"type":"string","description":"Destination account number"},"routing_number":{"type":"string","description":"Destination routing number"},"account_holder_address":{"$ref":"#/components/schemas/Address"},"institution_name":{"type":"string","description":"Destination Institution Name (e.g. Bank of America)"},"institution_address":{"$ref":"#/components/schemas/Address"}},"description":"Destination counterparty where funds will be sent"},"Withdrawal":{"type":"object","properties":{"id":{"type":"string","description":"Unique Identifier for the withdrawal request","readOnly":true},"status":{"type":"string","description":"Status of the withdrawal. Cannot be modified directly by the client","readOnly":true,"enum":["REQUESTED","REJECTED","EXPIRED","ACCEPTED","EXECUTED","CANCELLED"]},"withdrawal_type":{"type":"string","description":"Type of Withdrawal being performed. NOTE: this is dependent on the asset type of the source account. Further details available here","enum":["WIRE","ACH"]},"value":{"type":"number","description":"Value to be withdrawn (uses the source account currency)"},"description":{"type":"string","description":"(Optional) Description of the transaction"},"reference_id":{"type":"string","description":"(Optional) Destination reference id"},"source_account_id":{"type":"string","description":"Source account ID from which funds will be withdrawn.","example":"123"},"destination_counter_party":{"type":"object","description":"Destination counterparty where funds will be sent"}},"discriminator":{"propertyName":"withdrawal_type","mapping":{"ACH":"#/components/schemas/WithdrawalACH","WIRE":"#/components/schemas/WithdrawalWire","CRYPTO":"#/components/schemas/WithdrawalCrypto"}}},"WithdrawalACH":{"type":"object","properties":{"id":{"type":"string","description":"Unique Identifier for the withdrawal request","readOnly":true},"status":{"type":"string","description":"Status of the withdrawal. Cannot be modified directly by the client","readOnly":true,"enum":["REQUESTED","REJECTED","EXPIRED","ACCEPTED","EXECUTED","CANCELLED"]},"withdrawal_type":{"type":"string","description":"Type of Withdrawal being performed. NOTE: this is dependent on the asset type of the source account. Further details available here","enum":["WIRE","ACH"]},"value":{"type":"number","description":"Value to be withdrawn (uses the source account currency)"},"description":{"type":"string","description":"(Optional) Description of the transaction"},"reference_id":{"type":"string","description":"(Optional) Destination reference id"},"source_account_id":{"type":"string","description":"Source account ID from which funds will be withdrawn.","example":"123"},"destination_counter_party":{"$ref":"#/components/schemas/CounterPartyACH"}}},"WithdrawalCrypto":{"type":"object","properties":{"id":{"type":"string","description":"Unique Identifier for the withdrawal request","readOnly":true},"status":{"type":"string","description":"Status of the withdrawal. Cannot be modified directly by the client","readOnly":true,"enum":["REQUESTED","REJECTED","EXPIRED","ACCEPTED","EXECUTED","CANCELLED"]},"withdrawal_type":{"type":"string","description":"Type of Withdrawal being performed. NOTE: this is dependent on the asset type of the source account. Further details available here","enum":["WIRE","ACH"]},"value":{"type":"number","description":"Value to be withdrawn (uses the source account currency)"},"description":{"type":"string","description":"(Optional) Description of the transaction"},"reference_id":{"type":"string","description":"(Optional) Destination reference id"},"source_account_id":{"type":"string","description":"Source account ID from which funds will be withdrawn.","example":"123"},"destination_counter_party":{"$ref":"#/components/schemas/CounterPartyNorthAmericanCrypto"}}},"WithdrawalWire":{"type":"object","properties":{"id":{"type":"string","description":"Unique Identifier for the withdrawal request","readOnly":true},"status":{"type":"string","description":"Status of the withdrawal. Cannot be modified directly by the client","readOnly":true,"enum":["REQUESTED","REJECTED","EXPIRED","ACCEPTED","EXECUTED","CANCELLED"]},"withdrawal_type":{"type":"string","description":"Type of Withdrawal being performed. NOTE: this is dependent on the asset type of the source account. Further details available here","enum":["WIRE","ACH"]},"value":{"type":"number","description":"Value to be withdrawn (uses the source account currency)"},"description":{"type":"string","description":"(Optional) Description of the transaction"},"reference_id":{"type":"string","description":"(Optional) Destination reference id"},"source_account_id":{"type":"string","description":"Source account ID from which funds will be withdrawn.","example":"123"},"destination_counter_party":{"$ref":"#/components/schemas/CounterPartyWire"}}},"ResponseTransfer":{"required":["data"],"type":"object","properties":{"data":{"$ref":"#/components/schemas/Transfer"}}},"Transfer":{"required":["created_timestamp","destination_details","id","source_details","status","valid_until"],"type":"object","properties":{"id":{"type":"string","description":"Unique ID of the transfer request, to be used to accept the transfer and lookup status","readOnly":true},"status":{"type":"string","description":"Status of the transfer. Cannot be modified directly by the client","readOnly":true,"enum":["REQUESTED","ACCEPTED","EXPIRED","CANCELLED","EXECUTED","REJECTED"]},"created_timestamp":{"type":"string","description":"Time when the transfer request was generated","format":"date-time","readOnly":true},"valid_until":{"type":"string","description":"Time when this transfer request expires and can no longer be accepted. Upon expiry a new transfer must be requested","format":"date-time","readOnly":true},"source_details":{"$ref":"#/components/schemas/TransferSourceAccount"},"destination_details":{"$ref":"#/components/schemas/TransferDestinationAccount"}}},"TransferDestinationAccount":{"required":["amount_to_credit","destination_account_id"],"type":"object","properties":{"destination_account_id":{"type":"string","description":"Destination account ID"},"currency":{"type":"string","description":"Destination account currency. Depreciated in favour of asset_type_id.","deprecated":true},"asset_type_id":{"type":"string","description":"Asset type IDs follow a simple structure as follows: `{$BLOCKCHAIN}_{$NETWORK}_{$CURRENCY_CODE}`  Simple asset type to test with include `ETHEREUM_ROPSTEN_ETH_T`, `ETHEREUM_ROPSTEN_USDC_T` and `BITCOIN_TESTNET_BTC_T` "},"amount_to_credit":{"type":"number","description":"Amount that will be credited to the destination account"}},"description":"Details of transaction to be performed on the destination account on acceptance"},"TransferSourceAccount":{"required":["amount_to_debit","source_account_id"],"type":"object","properties":{"source_account_id":{"type":"string","description":"Source account ID"},"currency":{"type":"string","description":"Source account currency. Depreciated in favour of asset_type_id.","deprecated":true},"asset_type_id":{"type":"string","description":"Asset type IDs follow a simple structure as follows: `{$BLOCKCHAIN}_{$NETWORK}_{$CURRENCY_CODE}`  Simple asset type to test with include `ETHEREUM_ROPSTEN_ETH_T`, `ETHEREUM_ROPSTEN_USDC_T` and `BITCOIN_TESTNET_BTC_T` "},"amount_to_debit":{"type":"number","description":"Amount that will be debited from the source account"}},"description":"Details of transaction to be performed on the source account on acceptance"},"RequestTransfer":{"required":["amount","destination_account_id","source_account_id"],"type":"object","properties":{"source_account_id":{"type":"string","description":"Source account from which funds will be withdrawn"},"destination_account_id":{"type":"string","description":"Destination account where funds will be deposited"},"amount":{"type":"number","description":"Amount to transfer from the source account to the destination account"},"description":{"type":"string","description":"(Optional) Description of the transfer"}}},"ResponseTransferBase":{"required":["data"],"type":"object","properties":{"data":{"$ref":"#/components/schemas/TransferBase"}}},"TransferBase":{"required":["id","status"],"type":"object","properties":{"id":{"type":"string","description":"Unique ID of the transfer request, to be used to accept the transfer and lookup status","readOnly":true},"status":{"type":"string","description":"Status of the transfer. Cannot be modified directly by the client","readOnly":true,"enum":["REQUESTED","ACCEPTED","EXPIRED","CANCELLED","EXECUTED","REJECTED"]}}},"Exchange":{"required":["action","created_timestamp","destination_details","id","source_details","status"],"type":"object","properties":{"id":{"type":"string","description":"Unique ID of the exchange request","readOnly":true},"status":{"type":"string","description":"Status of the Exchange. Cannot be modified directly by the client","readOnly":true,"enum":["REQUESTED","ACCEPTED","EXPIRED","CANCELLED","EXECUTED","REJECTED"]},"created_timestamp":{"type":"string","description":"Time when the exchange request was generated","format":"date-time"},"action":{"type":"string","description":"Type of exchange being performed","enum":["BUY","SELL"]},"source_details":{"$ref":"#/components/schemas/TransferSourceAccount"},"destination_details":{"$ref":"#/components/schemas/TransferDestinationAccount"}}},"ResponseExchange":{"required":["data"],"type":"object","properties":{"data":{"$ref":"#/components/schemas/Exchange"}}},"RequestExchangeAccept":{"required":["maximum_slippage"],"type":"object","properties":{"maximum_slippage":{"type":"number","description":"The maximum slippage Layer2 will consider when accepting this order. Defined in bps and represented as a percentage. So 10bps would be presented as 0.001. Must be greater than or equal to 0.\n\nWe calculate slippage based on the quote you are accepting. While the slippage may not always be used, it is there to ensure a better completion/fill rate with our market makers. \n\nWhere the quote cannot be fulfilled within the slippage tolerance, the exchange response status will be ```REJECTED```. \n"}}},"RequestExchange":{"required":["action","amount","destination_account_id","source_account_id"],"type":"object","properties":{"source_account_id":{"type":"string","description":"Source account from which funds will be withdrawn"},"destination_account_id":{"type":"string","description":"Destination account where funds will be deposited"},"amount":{"type":"number","description":"Amount to Buy or Sell depending on the Type (will determine the actual amount withdrawn)"},"action":{"type":"string","description":"Type of exchange being performed","enum":["BUY","SELL"]},"description":{"type":"string","description":"(Optional) Description of the transaction"}}},"DocumentBase":{"required":["id"],"type":"object","properties":{"id":{"type":"string","description":"Unique ID of the document","readOnly":true}}},"ResponseDocumentBase":{"required":["data"],"type":"object","properties":{"data":{"$ref":"#/components/schemas/DocumentBase"}}},"CustomerBase":{"required":["id"],"type":"object","properties":{"id":{"type":"string","description":"Unique Identifier for the customer"}}},"ResponseCustomerBase":{"required":["data"],"type":"object","properties":{"data":{"$ref":"#/components/schemas/CustomerBase"}}},"CustomerCorporation":{"required":["customer_type","id","registered_name","status"],"type":"object","properties":{"id":{"type":"string","description":"Unique Identifier for the customer"},"customer_type":{"type":"string","description":"Type of customer","enum":["INDIVIDUAL","CORPORATION"]},"status":{"type":"string","description":"Status of the customer","readOnly":true,"enum":["ACTIVE","PENDING","INACTIVE","DISABLED"]},"registered_name":{"type":"string","description":"Corporate entity registered name"},"trading_name":{"type":"string","description":"Trading/'Doing Business As' name (if different to registered name)"},"registered_number":{"type":"string","description":"Government registered number of the corporate entity (Business EIN, Business Number etc)"},"registered_address":{"$ref":"#/components/schemas/Address"},"telephone_number":{"type":"string","description":"Telephone Number"},"website_address":{"type":"string","description":"Website URL"},"state_of_incorporation":{"type":"string","description":"State / Province / Riding of Incorporation (2 digit code)"},"country_of_incorporation":{"type":"string","description":"Country of incorporation (2 Digit ISO31661-Alpha2 Format - https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)"},"corporate_entity_type":{"type":"string","description":"Type of corporate entity","enum":["CORPORATION","LLC","PARTNERSHIP"]},"contact_first_name":{"type":"string","description":"Business Contact - First name"},"contact_last_name":{"type":"string","description":"Business Contact - Last name"},"contact_telephone_number":{"type":"string","description":"Business Contact - Telephone number"},"contact_email_address":{"type":"string","description":"Business Contact - Email Address"},"individuals":{"type":"array","description":"Individuals Associated to Corporation","readOnly":true,"items":{"$ref":"#/components/schemas/Individual"}}}},"CustomerIndividual":{"required":["customer_type","first_name","id","last_name","status"],"type":"object","properties":{"id":{"type":"string","description":"Unique Identifier for the customer"},"customer_type":{"type":"string","description":"Type of customer","enum":["INDIVIDUAL","CORPORATION"]},"status":{"type":"string","description":"Status of the customer","readOnly":true,"enum":["ACTIVE","PENDING","INACTIVE","DISABLED"]},"first_name":{"type":"string","description":"First name"},"middle_name":{"type":"string","description":"Middle Name(s) (if present)"},"last_name":{"type":"string","description":"Last name"},"email_address":{"type":"string","description":"Email Address"},"mailing_address":{"$ref":"#/components/schemas/Address"},"telephone_number":{"type":"string","description":"Telephone Number"},"tax_reference_number":{"type":"string","description":"Tax reference number of the country (SSN, ITIN, SIN, National Insurance Number etc)"},"passport_number":{"type":"string","description":"Passport Number"},"nationality":{"type":"string","description":"Nationality (2 Digit ISO31661-Alpha2 Format - https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)"},"date_of_birth":{"type":"string","description":"RFC3339 (YYYY-MM-DD) Date of Birth ","format":"date"}}},"Individual":{"required":["first_name","id","individual_type","last_name"],"type":"object","properties":{"id":{"type":"string","description":"Unique ID of the Individual","readOnly":true},"individual_type":{"type":"string","description":"Type of Individual (use individual for non corporate customers)","enum":["INDIVIDUAL","OFFICER","BENEFICIAL_OWNER"]},"first_name":{"type":"string","description":"First name"},"middle_name":{"type":"string","description":"Middle Name(s) (if present)"},"last_name":{"type":"string","description":"Last name"},"email_address":{"type":"string","description":"Email Address"},"mailing_address":{"$ref":"#/components/schemas/Address"},"telephone_number":{"type":"string","description":"Telephone Number"},"tax_reference_number":{"type":"string","description":"Tax reference number of the country (SSN, ITIN, SIN, National Insurance Number etc)"},"passport_number":{"type":"string","description":"Passport Number"},"nationality":{"type":"string","description":"Nationality (2 Digit ISO31661-Alpha2 Format - https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)"},"date_of_birth":{"type":"string","description":"RFC3339 (YYYY-MM-DD) Date of Birth ","format":"date"},"percentage_ownership":{"type":"integer","description":"(Only where type is BENEFICIAL_OWNER) Percentage ownership of the corporation (0 to 100)","format":"int32"},"title":{"type":"string","description":"(Only where type is OFFICER) Valid values CEO, COO, CFO, President, BenefitsAdministrationOfficer, CIO, VP, AVP, Treasurer, Secretary, Controller, Manager, Partner or Member."}},"description":"Individuals Associated to Corporation","readOnly":true},"RequestCustomer":{"required":["customer_type","id","status"],"type":"object","properties":{"id":{"type":"string","description":"Unique Identifier for the customer"},"customer_type":{"type":"string","description":"Type of customer","enum":["INDIVIDUAL","CORPORATION"]},"status":{"type":"string","description":"Status of the customer","readOnly":true,"enum":["ACTIVE","PENDING","INACTIVE","DISABLED"]}},"discriminator":{"propertyName":"customer_type","mapping":{"INDIVIDUAL":"#/components/schemas/CustomerIndividual","CORPORATION":"#/components/schemas/CustomerCorporation"}}},"PayorBase":{"required":["id"],"type":"object","properties":{"id":{"type":"string","description":"Unique ID to be associated to this payor. Payor IDs must be unique per customer. The Payor ID follow the [External Identifier](#section/Concepts/External-Entity-Identifiers) pattern"}}},"ResponsePayorBase":{"required":["data"],"type":"object","properties":{"data":{"$ref":"#/components/schemas/PayorBase"}}},"RequestPayorOnboarding":{"required":["id"],"type":"object","properties":{"id":{"type":"string","description":"Unique ID to be associated to this payor. Payor IDs must be unique per customer. The Payor ID follow the [External Identifier](#section/Concepts/External-Entity-Identifiers) pattern"},"first_name":{"type":"string","description":"First Name"},"middle_name":{"type":"string","description":"Middle Name"},"last_name":{"type":"string","description":"Last Name"},"email_address":{"type":"string","description":"Email Address"},"phone_number":{"type":"string","description":"Telephone Number"},"company_name":{"type":"string","description":"(Optional) Company Name"}}},"IndividualBase":{"required":["id"],"type":"object","properties":{"id":{"type":"string","description":"Unique ID of the Individual","readOnly":true}}},"ResponseIndividualBase":{"required":["data"],"type":"object","properties":{"data":{"$ref":"#/components/schemas/IndividualBase"}}},"RequestIndividual":{"required":["first_name","id","individual_type","last_name"],"type":"object","properties":{"id":{"type":"string","description":"Unique ID of the Individual","readOnly":true},"individual_type":{"type":"string","description":"Type of Individual (use individual for non corporate customers)","enum":["INDIVIDUAL","OFFICER","BENEFICIAL_OWNER"]},"first_name":{"type":"string","description":"First name"},"middle_name":{"type":"string","description":"Middle Name(s) (if present)"},"last_name":{"type":"string","description":"Last name"},"email_address":{"type":"string","description":"Email Address"},"mailing_address":{"$ref":"#/components/schemas/Address"},"telephone_number":{"type":"string","description":"Telephone Number"},"tax_reference_number":{"type":"string","description":"Tax reference number of the country (SSN, ITIN, SIN, National Insurance Number etc)"},"passport_number":{"type":"string","description":"Passport Number"},"nationality":{"type":"string","description":"Nationality (2 Digit ISO31661-Alpha2 Format - https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)"},"date_of_birth":{"type":"string","description":"RFC3339 (YYYY-MM-DD) Date of Birth ","format":"date"},"percentage_ownership":{"type":"integer","description":"(Only where type is BENEFICIAL_OWNER) Percentage ownership of the corporation (0 to 100)","format":"int32"},"title":{"type":"string","description":"(Only where type is OFFICER) Valid values CEO, COO, CFO, President, BenefitsAdministrationOfficer, CIO, VP, AVP, Treasurer, Secretary, Controller, Manager, Partner or Member."}}},"ApplicationBase":{"required":["id"],"type":"object","properties":{"id":{"type":"string","description":"Unique Identifier for the application","readOnly":true}}},"ResponseApplicationBase":{"required":["data"],"type":"object","properties":{"data":{"$ref":"#/components/schemas/ApplicationBase"}}},"AccountOpen":{"required":["account_id","asset_type_id","product_id"],"type":"object","properties":{"account_id":{"type":"string","description":"The identifier you wish to use to uniquely identify this account. The account id follows the [External Identifier](#section/Concepts/External-Entity-Identifiers) pattern. "},"product_id":{"type":"string","description":"Select the type of account being opened. You can customise and/or create new product offerings by visiting the [Management Interface](http://management.layer2financial.com)\n\nPre configured products that are available for use are `BASIC_DEPOSIT`, `BASIC_PAYMENT` and `BASIC_VIRTUAL`"},"asset_type_id":{"type":"string","description":"Select the asset type of the account being opened. Asset type selection is not open ended, it must be configured per product via the [Management Interface](http://management.layer2financial.com).  For simplicity, the pre-configured `BASIC_DEPOSIT` and `BASIC_PAYMENT` product types support all Layer2 asset types.\n\nAsset type IDs follow a simple structure as follows: `{$BLOCKCHAIN}_{$NETWORK}_{$CURRENCY_CODE}`  Simple asset type to test with include \n- `ETHEREUM_ROPSTEN_ETH_T`\n- `ETHEREUM_ROPSTEN_USDC_T`\n- `BITCOIN_TESTNET_BTC_T`\n- `FIAT_TESTNET_USD_T`\n"}},"description":"Details of the account to open for the customer"},"ApplicationCorporation":{"required":["account_to_open","application_type","customer_details","customer_id","id","status"],"type":"object","properties":{"id":{"type":"string","description":"Unique Identifier for the application","readOnly":true},"status":{"type":"string","description":"Status of the application","readOnly":true,"enum":["INCOMPLETE","READY_FOR_SUBMISSION","SUBMITTED","PROCESSING","CHANGES_REQUESTED","REJECTED","APPROVED"]},"application_type":{"type":"string","description":"Type of Application (Individual or Corporation)","enum":["INDIVIDUAL","CORPORATION"]},"account_to_open":{"$ref":"#/components/schemas/AccountOpen"},"customer_id":{"type":"string","description":"The identifier you wish to use to uniquely identify this customer (applies to both individual and corporate customers). The customer ID follows the [External Identifier](#section/Concepts/External-Entity-Identifiers) pattern. "},"customer_details":{"$ref":"#/components/schemas/Corporation"}}},"ApplicationIndividual":{"required":["account_to_open","application_type","customer_details","customer_id","id","status"],"type":"object","properties":{"id":{"type":"string","description":"Unique Identifier for the application","readOnly":true},"status":{"type":"string","description":"Status of the application","readOnly":true,"enum":["INCOMPLETE","READY_FOR_SUBMISSION","SUBMITTED","PROCESSING","CHANGES_REQUESTED","REJECTED","APPROVED"]},"application_type":{"type":"string","description":"Type of Application (Individual or Corporation)","enum":["INDIVIDUAL","CORPORATION"]},"account_to_open":{"$ref":"#/components/schemas/AccountOpen"},"customer_id":{"type":"string","description":"The identifier you wish to use to uniquely identify this customer (applies to both individual and corporate customers). The customer ID follows the [External Identifier](#section/Concepts/External-Entity-Identifiers) pattern. "},"customer_details":{"$ref":"#/components/schemas/IndividualForApplication"}}},"Corporation":{"required":["registered_name"],"type":"object","properties":{"registered_name":{"type":"string","description":"Corporate entity registered name"},"trading_name":{"type":"string","description":"Trading/'Doing Business As' name (if different to registered name)"},"registered_number":{"type":"string","description":"Government registered number of the corporate entity (Business EIN, Business Number etc)"},"registered_address":{"$ref":"#/components/schemas/Address"},"telephone_number":{"type":"string","description":"Telephone Number"},"website_address":{"type":"string","description":"Website URL"},"state_of_incorporation":{"type":"string","description":"State / Province / Riding of Incorporation (2 digit code)"},"country_of_incorporation":{"type":"string","description":"Country of incorporation (2 Digit ISO31661-Alpha2 Format - https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)"},"corporate_entity_type":{"type":"string","description":"Type of corporate entity","enum":["CORPORATION","LLC","PARTNERSHIP"]},"contact_first_name":{"type":"string","description":"Business Contact - First name"},"contact_last_name":{"type":"string","description":"Business Contact - Last name"},"contact_telephone_number":{"type":"string","description":"Business Contact - Telephone number"},"contact_email_address":{"type":"string","description":"Business Contact - Email Address"},"individuals":{"type":"array","description":"Individuals Associated to Corporation","readOnly":true,"items":{"$ref":"#/components/schemas/Individual"}}},"description":"Details of the corporation"},"IndividualForApplication":{"required":["first_name","last_name"],"type":"object","properties":{"first_name":{"type":"string","description":"First name"},"middle_name":{"type":"string","description":"Middle Name(s) (if present)"},"last_name":{"type":"string","description":"Last name"},"email_address":{"type":"string","description":"Email Address"},"mailing_address":{"$ref":"#/components/schemas/Address"},"telephone_number":{"type":"string","description":"Telephone Number"},"tax_reference_number":{"type":"string","description":"Tax reference number of the country (SSN, ITIN, SIN, National Insurance Number etc)"},"passport_number":{"type":"string","description":"Passport Number"},"nationality":{"type":"string","description":"Nationality (2 Digit ISO31661-Alpha2 Format - https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)"},"date_of_birth":{"type":"string","description":"RFC3339 (YYYY-MM-DD) Date of Birth ","format":"date"}},"description":"Details of the applying individual"},"RequestApplication":{"required":["application_type"],"type":"object","properties":{"application_type":{"type":"string"}},"discriminator":{"propertyName":"application_type","mapping":{"INDIVIDUAL":"#/components/schemas/ApplicationIndividual","CORPORATION":"#/components/schemas/ApplicationCorporation"}}},"AdjustmentCredit":{"required":["adjustment_type","amount","id","status","target_account_id"],"type":"object","properties":{"id":{"type":"string","description":"Unique ID of the adjustment request, to be used to accept the adjustment and lookup status","readOnly":true},"status":{"type":"string","description":"Status of the adjustment. Cannot be modified directly by the client","readOnly":true,"enum":["REQUESTED","ACCEPTED","CANCELLED","EXECUTED","REJECTED"]},"adjustment_type":{"type":"string","description":"Type of adjustment","enum":["CREDIT","DEBIT"]},"target_account_id":{"type":"string","description":"Target account ID into which the  credit adjustment is being applied. A credit adjustment is not available on all account types. Typically this is used for managing balances on `VIRTUAL` accounts only."},"amount":{"type":"number","description":"Total amount to credit to the target account. Use only positive values."}}},"CREDIT":{"required":["data"],"type":"object","properties":{"data":{"$ref":"#/components/schemas/AdjustmentCredit"}}},"AdjustmentDebit":{"required":["adjustment_type","amount","id","status","target_account_id"],"type":"object","properties":{"id":{"type":"string","description":"Unique ID of the adjustment request, to be used to accept the adjustment and lookup status","readOnly":true},"status":{"type":"string","description":"Status of the adjustment. Cannot be modified directly by the client","readOnly":true,"enum":["REQUESTED","ACCEPTED","CANCELLED","EXECUTED","REJECTED"]},"adjustment_type":{"type":"string","description":"Type of adjustment","enum":["CREDIT","DEBIT"]},"target_account_id":{"type":"string","description":"Target account ID into which the debit adjustment is being applied. A debit adjustment is not available on all account types. Typically this is used for managing balances on `VIRTUAL` accounts only."},"amount":{"type":"number","description":"Total amount to debit from the target account. Use only positive values."}}},"DEBIT":{"required":["data"],"type":"object","properties":{"data":{"$ref":"#/components/schemas/AdjustmentDebit"}}},"RequestAdjustment":{"required":["adjustment_type","id","status"],"type":"object","properties":{"id":{"type":"string","description":"Unique ID of the adjustment request, to be used to accept the adjustment and lookup status","readOnly":true},"status":{"type":"string","description":"Status of the adjustment. Cannot be modified directly by the client","readOnly":true,"enum":["REQUESTED","ACCEPTED","CANCELLED","EXECUTED","REJECTED"]},"adjustment_type":{"type":"string","description":"Type of adjustment","enum":["CREDIT","DEBIT"]}},"discriminator":{"propertyName":"adjustment_type","mapping":{"CREDIT":"#/components/schemas/AdjustmentCredit","DEBIT":"#/components/schemas/AdjustmentDebit"}}},"AccountBase":{"required":["id"],"type":"object","properties":{"id":{"type":"string","description":"Unique Identifier for the account - defined by the Client during account open"}}},"ResponseAccountBase":{"required":["data"],"type":"object","properties":{"data":{"$ref":"#/components/schemas/AccountBase"}}},"RequestAccountOpen":{"required":["account_to_open","customer_id"],"type":"object","properties":{"customer_id":{"type":"string","description":"Customer ID of the customer for whom the account is being opened (see /customers)"},"account_to_open":{"$ref":"#/components/schemas/AccountOpen"}}},"AddressLease":{"required":["asset_type_id","id","lease_enforced","wallet_address"],"type":"object","properties":{"id":{"type":"string","description":"Unique address lease identifier"},"wallet_address":{"type":"string","description":"Issued address for the receipt of funds. Depending on client configuration, ensure to check if there is a limited use lease applied to this address and alert end customers to the limitations if so"},"asset_type_id":{"type":"string","description":"Asset type IDs follow a simple structure as follows: `{$BLOCKCHAIN}_{$NETWORK}_{$CURRENCY_CODE}`  Simple asset type to test with include `ETHEREUM_ROPSTEN_ETH_T`, `ETHEREUM_ROPSTEN_USDC_T` and `BITCOIN_TESTNET_BTC_T` "},"asset_type":{"type":"string","description":"moved to asset_type_id*","deprecated":true,"enum":["FIAT","BITCOIN","ETHEREUM","POLYGON"]},"currency":{"type":"string","description":"*moved to asset_type_id*","deprecated":true},"lease_enforced":{"type":"boolean","description":"Determines if the address will be permanently linked to the requesting account (fixed), or if the association is temporary (rotating).\n\nIf `false`, there are no lease conditions and the address will be permanently linked to this account. \n\nIf `true`, there are lease conditions. When these conditions are met, the address will be relinquished and will be reissued to other account holders. Leases can be expired based on Time, Number of Transactions or Amount (see below). \n\nThe rotating address model is specifically for account based blockchains (e.g. Ethereum). It is useful in situations where you need to optimize blockchain fees (i.e. have a single account shared by multiple customers), if you want to provide some level of opaqueness to the funds held by an account holder, or where is does not make sense to provide an address for single time usage (e.g. receiving a one time payment). "},"lease_end_date":{"type":"string","description":"If a lease is enforced, the date and time the lease expires. After this date the address can no longer be used to receive funds and a new address must be requested. Null signifies no time limit on the lease","format":"date-time"},"lease_transaction_limit":{"type":"integer","description":"The number of times this address can be used to receive funds before the lease is retired. This supersedes the lease end date should it be set (i.e. once the transaction limit is reached the lease is expired even if time remains for usage). Null signifies no limits on the number of uses.","format":"int32"},"lease_value_limit":{"type":"number","description":"The value of funds that can be sent to this address before the lease is retired. This supersedes the lease end date should it be set (i.e. once the transaction value is reached the lease is expired even if time remains for usage). Null signifies no transaction value limit."}}},"ResponseAddressLease":{"required":["data"],"type":"object","properties":{"data":{"$ref":"#/components/schemas/AddressLease"}}},"RequestPaymentAddress":{"required":["amount"],"type":"object","properties":{"amount":{"type":"string","description":"Expected amount of payment (which can be split over multiple transactions)"},"payor_id":{"type":"string","description":"The payor to associate with this payment, generated using [create payor](#operation/onboardPayor). Only available with the payments product"},"payment_reference":{"type":"string","description":"Payment reference to associate with this payment. Only available with the payments product"}}},"RequestCustomerPatch":{"type":"object","properties":{"updates":{"type":"object","additionalProperties":{"type":"string","description":"Follow standard patch guidance"},"description":"Follow standard patch guidance"}}},"PatchApplication":{"type":"object","properties":{"field":{"type":"string","description":"Application Field To Be Patched","enum":["customer_id","account_to_open","product_type","asset_type","id","registered_name","trading_name","registered_number","registered_address.unit_number","registered_address.address_line1","registered_address.address_line2","registered_address.address_line3","registered_address.city","registered_address.state","registered_address.postal_code","registered_address.country_code","telephone_number","website_address","state_of_incorporation","country_of_incorporation","corporate_entity_type","contact_first_name","contact_last_name","contact_telephone_number","contact_email_address"]},"value":{"type":"string","description":"New value"}},"description":"Follow standard patch guidance"},"RequestApplicationPatch":{"type":"object","properties":{"updates":{"type":"array","description":"Follow standard patch guidance","items":{"$ref":"#/components/schemas/PatchApplication"}}}},"PatchIndividual":{"type":"object","properties":{"field":{"type":"string","description":"Individual Field To Be Patched","enum":["id","person_role","person_status","first_name","middle_name","last_name","email_address","mailing_address.unit_number","mailing_address.address_line1","mailing_address.address_line2","mailing_address.address_line3","mailing_address.city","mailing_address.state","mailing_address.postal_code","mailing_address.country_code","telephone_number","tax_reference_number","passport_number","nationality","date_of_birth","percentage_ownership","title"]},"value":{"type":"string","description":"New value"}},"description":"Follow standard patch guidance"},"RequestIndividualPatch":{"type":"object","properties":{"updates":{"type":"array","description":"Follow standard patch guidance","items":{"$ref":"#/components/schemas/PatchIndividual"}}}},"ResponseWithdrawal":{"type":"object","properties":{"data":{"$ref":"#/components/schemas/WithdrawalObject"}}},"WithdrawalObject":{"type":"object","properties":{"id":{"type":"string","description":"Unique Identifier for the withdrawal request","readOnly":true},"status":{"type":"string","description":"Status of the withdrawal. Cannot be modified directly by the client","readOnly":true,"enum":["REQUESTED","REJECTED","EXPIRED","ACCEPTED","EXECUTED","CANCELLED"]},"withdrawal_type":{"type":"string","description":"Type of Withdrawal being performed. NOTE: this is dependent on the asset type of the source account. Further details available here","enum":["WIRE","ACH"]},"value":{"type":"number","description":"Value to be withdrawn (uses the source account currency)"},"description":{"type":"string","description":"(Optional) Description of the transaction"},"reference_id":{"type":"string","description":"(Optional) Destination reference id"},"source_account_id":{"type":"string","description":"Source account ID from which funds will be withdrawn.","example":"123"},"destination_counter_party":{"type":"object","description":"Destination counterparty where funds will be sent"}},"discriminator":{"propertyName":"withdrawal_type","mapping":{"ACH":"#/components/schemas/WithdrawalACH","WIRE":"#/components/schemas/WithdrawalWire","CRYPTO":"#/components/schemas/WithdrawalCrypto"}}},"ResponseSettlement":{"required":["data"],"type":"object","properties":{"data":{"$ref":"#/components/schemas/Settlement"}}},"Settlement":{"type":"object","properties":{"id":{"type":"string","description":"Settlement ID"},"settlement_status":{"type":"string","description":"Status of this settlement. Processed settlements are complete and funds dispersed","enum":["INITIALIZED","DELIVERING","CONVERTING","SETTLED"]},"settlement_executed_timestamp":{"type":"string","description":"Time when this settlement was executed (when funds were dispersed)","format":"date-time"},"settlement_asset_type":{"type":"string","description":"Asset type of the settlement","enum":["FIAT","BITCOIN","ETHEREUM","POLYGON"]},"settlement_currency":{"type":"string","description":"Currency of the settlement"},"settlement_amount":{"type":"number","description":"Full amount of the settlement that was performed (prior to any fee deductions by the receiving institution)"},"settlement_details":{"type":"array","description":"Breakdown of the transactions that were included in this settlement","items":{"$ref":"#/components/schemas/SettlementDetails"}}}},"SettlementDetails":{"type":"object","properties":{"source_account_customer_id":{"type":"string","description":"Customer ID of the source account holder"},"source_account_id":{"type":"string","description":"Source account from which exchange funds were withdrawn"},"source_asset_type":{"type":"string","description":"Source account asset type","enum":["FIAT","BITCOIN","ETHEREUM","POLYGON"]},"source_currency":{"type":"string","description":"Source account currency"},"source_amount":{"type":"number","description":"Source account amount withdrawn"},"destination_account_customer_id":{"type":"string","description":"Customer ID of the destination account holder"},"destination_account_id":{"type":"string","description":"Destination account into which exchange funds are deposited"},"destination_asset_type":{"type":"string","description":"Destination account asset type","enum":["FIAT","BITCOIN","ETHEREUM","POLYGON"]},"destination_currency":{"type":"string","description":"Destination account currency"},"destination_amount":{"type":"number","description":"Destination account amount deposited"},"payment_payor_id":{"type":"string","description":"Optional Payor ID who performed the initial deposit (only on payment accounts)"},"payment_reference_id":{"type":"string","description":"Optional Payment Reference ID associated to the initial deposit (only on payment accounts)"},"payment_expected_amount":{"type":"string","description":"Optional expected amount for this payment (only on payment accounts)"}},"description":"Breakdown of the transactions that were included in this settlement"},"CUSTOMER_INDIVIDUAL":{"required":["data"],"type":"object","properties":{"data":{"$ref":"#/components/schemas/CustomerIndividual"}}},"CUSTOMER_CORPORATION":{"required":["data"],"type":"object","properties":{"data":{"$ref":"#/components/schemas/CustomerCorporation"}}},"ResponseIndividual":{"required":["data"],"type":"object","properties":{"data":{"$ref":"#/components/schemas/Individual"}}},"INDIVIDUAL":{"required":["data"],"type":"object","properties":{"data":{"$ref":"#/components/schemas/ApplicationIndividual"}}},"CORPORATION":{"required":["data"],"type":"object","properties":{"data":{"$ref":"#/components/schemas/ApplicationCorporation"}}},"ApplicationFieldError":{"required":["field_name","field_status"],"type":"object","properties":{"field_name":{"type":"string","description":"Application field to be corrected","readOnly":true,"enum":["customer_id","account_to_open","product_type","asset_type","id","registered_name","trading_name","registered_number","registered_address.unit_number","registered_address.address_line1","registered_address.address_line2","registered_address.address_line3","registered_address.city","registered_address.state","registered_address.postal_code","registered_address.country_code","telephone_number","website_address","state_of_incorporation","country_of_incorporation","corporate_entity_type","contact_first_name","contact_last_name","contact_telephone_number","contact_email_address"]},"field_status":{"type":"string","description":"Error status of the field","readOnly":true,"enum":["MISSING","NEEDS_UPDATE"]},"description":{"type":"string","description":"Additional supporting error details"}},"description":"List of validation errors with the application.","readOnly":true},"ApplicationState":{"required":["account_to_open","application_type","customer_id","id","status"],"type":"object","properties":{"id":{"type":"string","description":"Unique Identifier for the application","readOnly":true},"status":{"type":"string","description":"Status of the application","readOnly":true,"enum":["INCOMPLETE","READY_FOR_SUBMISSION","SUBMITTED","PROCESSING","CHANGES_REQUESTED","REJECTED","APPROVED"]},"application_type":{"type":"string","description":"Type of Application (Individual or Corporation)","enum":["INDIVIDUAL","CORPORATION"]},"account_to_open":{"$ref":"#/components/schemas/AccountOpen"},"customer_id":{"type":"string","description":"The identifier you wish to use to uniquely identify this customer (applies to both individual and corporate customers). The customer ID follows the [External Identifier](#section/Concepts/External-Entity-Identifiers) pattern. "},"application_errors":{"type":"array","description":"List of errors with the application.","readOnly":true,"items":{"type":"string","description":"List of errors with the application.","readOnly":true,"enum":["MISSING_BENEFICIAL_OWNER","MISSING_OFFICER","MISSING_PERSON"]}},"application_validation_errors":{"type":"array","description":"List of validation errors with the application.","readOnly":true,"items":{"$ref":"#/components/schemas/ApplicationFieldError"}},"application_document_errors":{"type":"array","description":"List of document errors with the application.","readOnly":true,"items":{"$ref":"#/components/schemas/DocumentErrorApplication"}},"individual_errors":{"type":"array","description":"ONLY for corporate applications. List of errors for the submitted individuals","readOnly":true,"items":{"$ref":"#/components/schemas/IndividualState"}}}},"DocumentErrorApplication":{"required":["document","id","status"],"type":"object","properties":{"id":{"type":"string","description":"Unique ID of the document","readOnly":true},"face":{"type":"string","description":"Face of the document (back typically only required for drivers licence)","enum":["FRONT","BACK"]},"status":{"type":"string","description":"Status of the document upload","enum":["APPROVED","REJECTED","MISSING"]},"description":{"type":"string","description":"Additional supporting error details"},"document":{"type":"string","description":"Document Type the error occurred on","readOnly":true,"enum":["ARTICLES_OF_INCORPORATION","CERTIFICATE_OF_INCORPORATION"]}},"description":"List of document errors with the application.","readOnly":true},"DocumentErrorIndividual":{"required":["document","id","status"],"type":"object","properties":{"id":{"type":"string","description":"Unique ID of the document","readOnly":true},"face":{"type":"string","description":"Face of the document (back typically only required for drivers licence)","enum":["FRONT","BACK"]},"status":{"type":"string","description":"Status of the document upload","enum":["APPROVED","REJECTED","MISSING"]},"description":{"type":"string","description":"Additional supporting error details"},"document":{"type":"string","description":"Document Type the error occurred on","readOnly":true,"enum":["DRIVERS_LICENCE","STATE_ID","PASSPORT","GOVERNMENT_ID","UTILITY_BILL","BANK_STATEMENT","LEASE_AGREEMENT","SOCIAL_SECURITY_CARD","POWER_OF_ATTORNEY"]}}},"IndividualFieldError":{"required":["field_name","field_status"],"type":"object","properties":{"field_name":{"type":"string","description":"Individual field to be corrected","readOnly":true,"enum":["id","person_role","person_status","first_name","middle_name","last_name","email_address","mailing_address.unit_number","mailing_address.address_line1","mailing_address.address_line2","mailing_address.address_line3","mailing_address.city","mailing_address.state","mailing_address.postal_code","mailing_address.country_code","telephone_number","tax_reference_number","passport_number","nationality","date_of_birth","percentage_ownership","title"]},"field_status":{"type":"string","description":"Error status of the field","readOnly":true,"enum":["MISSING","NEEDS_UPDATE"]},"description":{"type":"string","description":"Additional supporting error details"}}},"IndividualState":{"required":["id"],"type":"object","properties":{"id":{"type":"string","description":"Unique ID of the Individual","readOnly":true},"individual_validation_errors":{"type":"array","items":{"$ref":"#/components/schemas/IndividualFieldError"}},"individual_document_errors":{"type":"array","items":{"$ref":"#/components/schemas/DocumentErrorIndividual"}}},"description":"ONLY for corporate applications. List of errors for the submitted individuals","readOnly":true},"ResponseApplicationState":{"required":["data"],"type":"object","properties":{"data":{"$ref":"#/components/schemas/ApplicationState"}}},"Account":{"required":["asset_type_id","available_balance","current_balance","customer_id","id","product_id","product_type","status"],"type":"object","properties":{"id":{"type":"string","description":"Unique Identifier for the account - defined by the Client during account open"},"status":{"type":"string","description":"Account Status - will determine servicing options on the account","enum":["OPEN","CLOSED","FROZEN","PENDING"]},"asset_type_id":{"type":"string","description":"Asset type IDs follow a simple structure as follows: `{$BLOCKCHAIN}_{$NETWORK}_{$CURRENCY_CODE}`  Simple asset type to test with include \n- `ETHEREUM_ROPSTEN_ETH_T`\n- `ETHEREUM_ROPSTEN_USDC_T`\n- `BITCOIN_TESTNET_BTC_T`\n- `FIAT_TESTNET_USD_T`\n"},"product_type":{"type":"string","description":"Top level product type. Options are `CLIENT` `DEPOSIT` and `VIRTUAL`. See [account concepts](#section/Concepts/Accounts) for additional details on these product types","readOnly":true,"enum":["CLIENT","DEPOSIT","VIRTUAL"]},"product_id":{"type":"string","description":"Client Product configuration this account respects"},"customer_id":{"type":"string","description":"Customer ID for whom the account belongs to"},"current_balance":{"type":"number","description":"Full balance on the account including funds on hold"},"available_balance":{"type":"number","description":"Balance available for immediate spending (excludes held funds)"}}},"AccountList":{"required":["accounts"],"type":"object","properties":{"accounts":{"type":"array","description":"Account List","items":{"$ref":"#/components/schemas/Account"}}}},"Page":{"required":["first","last","next","prev","self"],"type":"object","properties":{"self":{"type":"string","description":"endpoint to the current page of results"},"first":{"type":"string","description":"endpoint to the first page of results"},"prev":{"type":"string","description":"endpoint to the previous page of results"},"next":{"type":"string","description":"endpoint to the next page of results"},"last":{"type":"string","description":"endpoint to the last page of results"}},"description":"See the [pagination](#section/Concepts/Pagination) section for additional details on the generic pagination approach."},"ResponseAccounts":{"required":["data","links"],"type":"object","properties":{"data":{"$ref":"#/components/schemas/AccountList"},"links":{"$ref":"#/components/schemas/Page"}}},"ResponseAccount":{"required":["data"],"type":"object","properties":{"data":{"$ref":"#/components/schemas/Account"}}},"ResponseTransactionPayments":{"required":["data","links"],"type":"object","properties":{"data":{"$ref":"#/components/schemas/TransactionPaymentList"},"links":{"$ref":"#/components/schemas/Page"}}},"TransactionPayment":{"required":["id","transaction_date","transaction_status","value"],"type":"object","properties":{"id":{"type":"string","description":"Unique Identifier for the transaction"},"value":{"type":"number","description":"Value of the transaction in the underlying account currency"},"transaction_date":{"type":"string","description":"Date time the transaction was performed","format":"date-time"},"transaction_posted_date":{"type":"string","description":"Date time the transaction was posted","format":"date-time"},"transaction_status":{"type":"string","description":"Status of transaction","enum":["AUTHORIZED","PENDING","POSTED","CANCELLED"]},"description":{"type":"string","description":"Description"},"payor_id":{"type":"string","description":"Optional Payor ID this transaction is associated to"},"payor_reference_id":{"type":"string","description":"Optional Payment Reference ID associated with this transaction"},"payor_amount":{"type":"string","description":"Optional expected amount for this payment (which may be different to actual)"}},"description":"Transaction List"},"TransactionPaymentList":{"type":"object","properties":{"transactions":{"type":"array","description":"Transaction List","items":{"$ref":"#/components/schemas/TransactionPayment"}}}},"ResponseTransactionDetails":{"required":["data"],"type":"object","properties":{"data":{"$ref":"#/components/schemas/TransactionDetails"}}},"TransactionDetails":{"required":["id","transaction_date","transaction_status","value"],"type":"object","properties":{"id":{"type":"string","description":"Unique Identifier for the transaction"},"value":{"type":"number","description":"Value of the transaction in the underlying account currency"},"transaction_date":{"type":"string","description":"Date time the transaction was performed","format":"date-time"},"transaction_posted_date":{"type":"string","description":"Date time the transaction was posted","format":"date-time"},"transaction_status":{"type":"string","description":"Status of transaction","enum":["AUTHORIZED","PENDING","POSTED","CANCELLED"]},"description":{"type":"string","description":"Description"}}},"ResponseTransactions":{"required":["data","links"],"type":"object","properties":{"data":{"$ref":"#/components/schemas/TransactionList"},"links":{"$ref":"#/components/schemas/Page"}}},"Transaction":{"required":["id","transaction_date","transaction_status","value"],"type":"object","properties":{"id":{"type":"string","description":"Unique Identifier for the transaction"},"value":{"type":"number","description":"Value of the transaction in the underlying account currency"},"transaction_date":{"type":"string","description":"Date time the transaction was performed","format":"date-time"},"transaction_posted_date":{"type":"string","description":"Date time the transaction was posted","format":"date-time"},"transaction_status":{"type":"string","description":"Status of transaction","enum":["AUTHORIZED","PENDING","POSTED","CANCELLED"]},"description":{"type":"string","description":"Description"}},"description":"Transaction List"},"TransactionList":{"required":["transactions"],"type":"object","properties":{"transactions":{"type":"array","description":"Transaction List","items":{"$ref":"#/components/schemas/Transaction"}}}}},"securitySchemes":{"OAuth2Flow":{"type":"oauth2","description":"Layer2 Financial leverages OAuth2 with the client credentials grant type to authenticate your API requests. You will be provided a client ID and secret during registration to be used to generate your token. It is imperativethat these are housed securely once provided to you.\n\n> **Note:** In the production and sandbox environments, the TTL of each token is 15 minutes. You will need to ensure you have appropriate token refresh capabilities in place to pre-fetch tokens as they expire. In the development environment token TTL is 12 hours.\n## Header Generation\nTo generate an appropriate token request, the client ID and secret must be base64 encoded as follows `base64_encode({$clientID}:{$secret})`. The resultant base64 encoded value is then used as follows to request a token. \n\n    curl --location --request POST '{$LAYER2_AUTH_ENDPOINT}?grant_type=client_credentials&scope={$SCOPES}' \\\n    --header 'Accept: application/json' \\\n    --header 'Content-Type: application/x-www-form-urlencoded' \\\n    --header 'Cache-Control: no-cache' \\\n    --header 'Authorization: Basic {$BASE_64_ENCODED_CLIENTID_AND_SECRET}}' \\\n## Scopes\nScopes are used to control access per API. Required scopes are provided as part of each API description, with the full list of scopes listed below. Scopes are requested at the time of token creation. Best practice dictates to request as few a scopes as are needed to perform the function you are performing. When elevation is needed, additional tokens can be requested with the appropriate scopes in parallel, without expiring existing token. ","in":"header","flows":{"clientCredentials":{"authorizationUrl":"https://layer2financial.okta.com/oauth2/ausbdqlx69rH6OjWd696/v1/token","tokenUrl":"https://layer2financial.okta.com/oauth2/ausbdqlx69rH6OjWd696/v1/token","scopes":{"customers:read":"View Customer Data","customers:write":"Create and Modify Customer Related Data","accounts:read":"View Account Data","accounts:write":"Create and Modify Account Related Data","settlements:read":"View Settlements Data","applications:read":"View Application Data","applications:write":"Create and Modify Application Related Data","transfers:read":"View Transfers Data","transfers:write":"Create and Modify Transfers Related Data","withdrawals:read":"View Withdrawals Data","withdrawals:write":"Create and Modify Withdrawals Related Data","exchanges:read":"View Exchanges Data","exchanges:write":"Create and Modify Exchange Related Data","adjustments:read":"View Adjustment Data","adjustments:write":"Create and Modify Adjustment Related Data"}}}}}}}
